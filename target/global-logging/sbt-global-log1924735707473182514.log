[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\shicheng_work_pc\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\shicheng_work_pc\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 1.8.0_181)
[debug]       Load.loadUnit: plugins took 309.3323ms
[debug]       Load.loadUnit: defsScala took 0.3572ms
[debug] [Loading] Scanning directory C:\Users\shicheng_work_pc\.sbt\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\shicheng_work_pc\.sbt\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 34.6932 ms
[debug]           Load.resolveProject(global-plugins) took 76.9916ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\shicheng_work_pc\.sbt\plugins, plugins: List(<none>))) took 152.7303ms
[debug] [Loading] Done in C:\Users\shicheng_work_pc\.sbt\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 182.4422ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4664ms
[debug]     Load.loadUnit(file:/C:/Users/shicheng_work_pc/.sbt/plugins/, ...) took 503.6623ms
[debug]   Load.apply: load took 734.5594ms
[debug]   Load.apply: resolveProjects took 9.6349ms
[debug]   Load.apply: finalTransforms took 90.1694ms
[debug]   Load.apply: config.delegates took 14.8289ms
[debug]   Load.apply: Def.make(settings)... took 1807.5803ms
[debug]   Load.apply: structureIndex took 165.1778ms
[debug]   Load.apply: mkStreams took 2.6251ms
[info] loading global plugins from C:\Users\shicheng_work_pc\.sbt\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8593.1421ms
[debug]           Load.loadUnit: plugins took 41.3406ms
[debug]           Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory D:\akka-test\project
[debug]             Load.loadUnit: mkEval took 9.5849ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\akka-test\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.1236 ms
[info] loading settings for project akka-test-build from idea.sbt ...
[debug]               Load.resolveProject(akka-test-build) took 3.4841ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akka-test-build, base: D:\akka-test\project, plugins: List(<none>))) took 6.2147ms
[debug] [Loading] Done in D:\akka-test\project, returning: (akka-test-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3771.6489ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.5406ms
[debug]         Load.loadUnit(file:/D:/akka-test/project/, ...) took 3820.8244ms
[debug]       Load.apply: load took 3822.5388ms
[debug]       Load.apply: resolveProjects took 0.1725ms
[debug]       Load.apply: finalTransforms took 12.2037ms
[debug]       Load.apply: config.delegates took 0.488ms
[debug]       Load.apply: Def.make(settings)... took 120.0959ms
[debug]       Load.apply: structureIndex took 34.5286ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from D:\akka-test\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 8470.7805ms
[debug]     Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory D:\akka-test
[debug]       Load.loadUnit: mkEval took 0.3031ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\akka-test, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0484 ms
[info] loading settings for project akka-test from build.sbt ...
[debug]         Load.resolveProject(akka-test) took 62.7098ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akka-test, base: D:\akka-test, plugins: List(<none>))) took 66.3505ms
[debug] [Loading] Done in D:\akka-test, returning: (akka-test)
[debug]     Load.loadUnit: loadedProjectsRaw took 2319.03ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.5212ms
[debug]   Load.loadUnit(file:/D:/akka-test/, ...) took 10801.0713ms
[debug] Load.apply: load took 10802.3301ms
[debug] Load.apply: resolveProjects took 0.1142ms
[debug] Load.apply: finalTransforms took 34.8543ms
[debug] Load.apply: config.delegates took 0.4161ms
[debug] Load.apply: Def.make(settings)... took 120.7997ms
[debug] Load.apply: structureIndex took 31.2909ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to akka-test (in build file:/D:/akka-test/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 11125 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 11125, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akka-test (in build file:/D:/akka-test/)
[debug] > Exec(idea-shell, None, None)
